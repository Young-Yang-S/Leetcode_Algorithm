Question:  Majority Element


Given an array nums of size n, return the majority element.
The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.

Example:
Input: nums = [2,2,1,1,1,2,2]
Output: 2

# This question is good to know, because it has many things to learn.

The first one is the nested statement in brute force method.

class Solution:
    def majorityElement(self, nums):
        majority_count = len(nums)//2
        for num in nums:
            count = sum(1 for elem in nums if elem == num)  ***
            if count > majority_count:
                return num
                
                
   # this method is preferred, we can use dictionary to store the frequency of each element and get the one with the largest frequency
   
nums = [2,2,1,1,1,2,2,3,3,3,3,3,3]

dd = {}
for i in range(0,len(nums)):
    if  nums[i] not in dd:
        dd[nums[i]] = 1
    else:
        dd[nums[i]] +=1

print(max(dd,key=dd.get))

# here you should know how get extract the most frequent element within dictionary
  
